{"version":3,"file":"main.js","sources":["webpack://astrobox-plugin-test/./src/index.ts","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/config.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/utils.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/debug.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/device.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/event.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/filesystem.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/installer.js","webpack://astrobox-plugin-test/webpack/runtime/rspack_version","webpack://astrobox-plugin-test/webpack/runtime/rspack_unique_id","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/interconnect.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/lifecycle.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/native.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/network.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/provider.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/thirdpartyapp.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/impls/ui.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/index.js","webpack://astrobox-plugin-test/./node_modules/.pnpm/astrobox-plugin-sdk@1.1.6/node_modules/astrobox-plugin-sdk/dist/init.js","webpack://astrobox-plugin-test/./src/interconn.ts","webpack://astrobox-plugin-test/./src/handshake.ts","webpack://astrobox-plugin-test/./src/utils.ts","webpack://astrobox-plugin-test/./src/sendFile.ts","webpack://astrobox-plugin-test/./src/fetch.ts"],"sourcesContent":["import AstroBox, { PickFileReturn } from \"astrobox-plugin-sdk\";\r\nimport InterHandshake from \"./handshake\";\r\nimport InterFile from \"./sendFile\";\r\nimport { formatBytes, getFileName } from \"./utils\";\r\n\r\n\r\nimport FetchClient from \"./fetch\";\r\n\r\n\r\n\r\nAstroBox.lifecycle.onLoad(() => {\r\n    console.log(\"Plugin on LOAD!\")\r\n    interconn = new InterHandshake(\"com.fetch\")\r\n    new FetchClient(interconn)\r\n})\r\n\r\n\r\n\r\n\r\nlet interconn:InterHandshake\r\nlet fileSender:InterFile\r\n\r\nlet file : PickFileReturn;\r\nconst pickFile = AstroBox.native.regNativeFun(()=>onPick())\r\nconst sendFile = AstroBox.native.regNativeFun(()=>handleSend())\r\nconst cancelSend = AstroBox.native.regNativeFun(()=>handleCancelSend())\r\nconst ui = [\r\n    {\r\n        node_id: \"pickFile\",\r\n        visibility: true,\r\n        disabled: false,\r\n        content: {\r\n            type: \"Button\",\r\n            value: {\r\n                primary: true,\r\n                text: \"选择文件\",\r\n                callback_fun_id: pickFile\r\n            }\r\n        }\r\n    }, {\r\n        node_id: \"send\",\r\n        visibility: true,\r\n        disabled: true,\r\n        content: {\r\n            type: \"Button\",\r\n            value: {\r\n                primary: true,\r\n                text: \"发送文件\",\r\n                callback_fun_id: sendFile\r\n            }\r\n        }\r\n    }, {\r\n        node_id: \"filename\",\r\n        visibility: true,\r\n        disabled: false,\r\n        content: {\r\n            type: \"Text\",\r\n            value: `未选择文件`\r\n        }\r\n    }, {\r\n        node_id: \"fuck\",\r\n        visibility: true,\r\n        disabled: false,\r\n        content: {\r\n            type: \"Text\",\r\n            value: `可能因为未知原因失败，多试试`\r\n        }\r\n    }\r\n]\r\nAstroBox.lifecycle.onLoad(() => {\r\n    console.log(\"Plugin on LOAD!\")\r\n    //@ts-ignore\r\n    AstroBox.ui.updatePluginSettingsUI(ui)\r\n    interconn = new InterHandshake(\"com.charlie.hyperbox\")\r\n    fileSender = new InterFile(interconn);\r\n})\r\nasync function onPick() {\r\n    try {\r\n        if(file?.path)await AstroBox.filesystem.unloadFile(file.path)\r\n    } catch (error) {\r\n        console.error(error)\r\n        //@ts-ignore\r\n        ui[2].content.value = error.message\r\n        //@ts-ignore\r\n        AstroBox.ui.updatePluginSettingsUI(ui)\r\n    }\r\n    file = await AstroBox.filesystem.pickFile({\r\n        decode_text: true,\r\n    })\r\n    ui[2]={\r\n        node_id: \"filename\",\r\n        visibility: true,\r\n        disabled: false,\r\n        content: {\r\n            type: \"Text\",\r\n            value: `${getFileName(file.path)}\\n${formatBytes(file.size)}`\r\n        }\r\n    }\r\n    ui[1].disabled = false\r\n    //@ts-ignore\r\n    AstroBox.ui.updatePluginSettingsUI(ui)\r\n}\r\nasync function handleSend() {\r\n    if (!file) return\r\n    ui[0].disabled = true\r\n    //@ts-ignore\r\n    ui[1].content.value.text = \"取消\"\r\n    //@ts-ignore\r\n    ui[1].content.value.callback_fun_id = cancelSend\r\n    //@ts-ignore\r\n    AstroBox.ui.updatePluginSettingsUI(ui)\r\n    try {\r\n        const appList = await AstroBox.thirdpartyapp.getThirdPartyAppList()\r\n        const app = appList.find(app=>app.package_name==\"com.charlie.hyperbox\")\r\n        if(!app){\r\n            ui[2].content.value = \"请先安装BandBBS客户端\"\r\n            //@ts-ignore\r\n            return AstroBox.ui.updatePluginSettingsUI(ui)\r\n        }\r\n        await AstroBox.thirdpartyapp.launchQA(app, \"com.charlie.hyperbox\")\r\n        await new Promise(resolve => setTimeout(resolve, 1000))\r\n        await fileSender.sendFile(getFileName(file.path),file.path,file.size,file.text_len,onprogress,onsuccess,onerror)\r\n    } catch (error) {\r\n        console.error(error)\r\n        //@ts-ignore\r\n        ui[2].content.value = error.message\r\n        //@ts-ignore\r\n        AstroBox.ui.updatePluginSettingsUI(ui)\r\n    }\r\n}\r\nasync function handleCancelSend() {\r\n    fileSender.cancel()\r\n    ui[0].disabled = false\r\n    //@ts-ignore\r\n    ui[1].content.value.text = \"发送文件\"\r\n    //@ts-ignore\r\n    ui[1].content.value.callback_fun_id = sendFile\r\n    //@ts-ignore\r\n    AstroBox.ui.updatePluginSettingsUI(ui)\r\n}\r\nfunction onprogress(progress: number, status: string) {\r\n    ui[2].content.value = `${status} ${(progress*100).toFixed(2)}%`\r\n    //@ts-ignore\r\n    AstroBox.ui.updatePluginSettingsUI(ui)\r\n}\r\nfunction onsuccess() {\r\n    ui[2].content.value = \"发送成功\"\r\n    //@ts-ignore\r\n    AstroBox.ui.updatePluginSettingsUI(ui)\r\n}\r\nfunction onerror() {\r\n    ui[2].content.value = \"发送失败\"\r\n    //@ts-ignore\r\n    AstroBox.ui.updatePluginSettingsUI(ui)\r\n}\r\n","export function read() {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.readConfig) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(globalThis.AstroBox.config.readConfig());\n    }\n    else {\n        throw new Error('AstroBox.config.readConfig not available on native side');\n    }\n}\nexport function write(content) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.writeConfig) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.config.writeConfig(JSON.stringify(content));\n    }\n    else {\n        throw new Error('AstroBox.config.writeConfig not available on native side');\n    }\n}\n","export function uint8ArrayToBase64(bytes) {\n    const base64abc = [\n        \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\",\n        \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n        \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\",\n        \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n        \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"+\", \"/\"\n    ];\n    let result = '', i;\n    const l = bytes.length;\n    for (i = 2; i < l; i += 3) {\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n        result += base64abc[((bytes[i - 1] & 0x0f) << 2) | (bytes[i] >> 6)];\n        result += base64abc[bytes[i] & 0x3f];\n    }\n    if (i === l + 1) {\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[(bytes[i - 2] & 0x03) << 4];\n        result += '==';\n    }\n    if (i === l) {\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n        result += base64abc[(bytes[i - 1] & 0x0f) << 2];\n        result += '=';\n    }\n    return result;\n}\nexport function base64ToUint8Array(base64) {\n    base64 = base64.replace(/[\\r\\n\\s]/g, '');\n    if (base64.length % 4 !== 0) {\n        throw new Error('Invalid base64 string length');\n    }\n    const table = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    let padding = 0;\n    if (base64.endsWith('=='))\n        padding = 2;\n    else if (base64.endsWith('='))\n        padding = 1;\n    const byteLength = (base64.length / 4) * 3 - padding;\n    const arr = new Uint8Array(byteLength);\n    let byteIdx = 0;\n    for (let i = 0; i < base64.length; i += 4) {\n        const n = (table.indexOf(base64[i]) << 18) |\n            (table.indexOf(base64[i + 1]) << 12) |\n            (table.indexOf(base64[i + 2]) << 6) |\n            table.indexOf(base64[i + 3]);\n        if (byteIdx < byteLength)\n            arr[byteIdx++] = (n >> 16) & 0xff;\n        if (byteIdx < byteLength)\n            arr[byteIdx++] = (n >> 8) & 0xff;\n        if (byteIdx < byteLength)\n            arr[byteIdx++] = n & 0xff;\n    }\n    return arr;\n}\nexport function uint8ArrayToString(arr) {\n    let out = '';\n    let i = 0;\n    while (i < arr.length) {\n        const byte1 = arr[i++];\n        if (byte1 < 0x80) {\n            out += String.fromCharCode(byte1);\n        }\n        else if (byte1 >= 0xc0 && byte1 < 0xe0) {\n            const byte2 = arr[i++];\n            out += String.fromCharCode(((byte1 & 0x1f) << 6) | (byte2 & 0x3f));\n        }\n        else if (byte1 >= 0xe0 && byte1 < 0xf0) {\n            const byte2 = arr[i++];\n            const byte3 = arr[i++];\n            out += String.fromCharCode(((byte1 & 0x0f) << 12) | ((byte2 & 0x3f) << 6) | (byte3 & 0x3f));\n        }\n        else {\n            // 4字节转为utf-16代理对\n            const byte2 = arr[i++];\n            const byte3 = arr[i++];\n            const byte4 = arr[i++];\n            let codepoint = ((byte1 & 0x07) << 18) |\n                ((byte2 & 0x3f) << 12) |\n                ((byte3 & 0x3f) << 6) |\n                (byte4 & 0x3f);\n            codepoint -= 0x10000;\n            out += String.fromCharCode(0xd800 + (codepoint >> 10), 0xdc00 + (codepoint & 0x3ff));\n        }\n    }\n    return out;\n}\nexport function stringToUint8Array(str) {\n    const arr = [];\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n        if (code < 0x80) {\n            arr.push(code);\n        }\n        else if (code < 0x800) {\n            arr.push(0xc0 | (code >> 6));\n            arr.push(0x80 | (code & 0x3f));\n        }\n        else if (code >= 0xd800 && code <= 0xdbff) {\n            // 代理对\n            const next = str.charCodeAt(++i);\n            const codepoint = ((code - 0xd800) << 10) + (next - 0xdc00) + 0x10000;\n            arr.push(0xf0 | (codepoint >> 18));\n            arr.push(0x80 | ((codepoint >> 12) & 0x3f));\n            arr.push(0x80 | ((codepoint >> 6) & 0x3f));\n            arr.push(0x80 | (codepoint & 0x3f));\n        }\n        else {\n            arr.push(0xe0 | (code >> 12));\n            arr.push(0x80 | ((code >> 6) & 0x3f));\n            arr.push(0x80 | (code & 0x3f));\n        }\n    }\n    return new Uint8Array(arr);\n}\n","import { uint8ArrayToBase64 } from \"../utils.js\";\nexport async function sendRaw(data) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.sendRaw) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.debug.sendRaw(uint8ArrayToBase64(data));\n    }\n    else {\n        throw new Error('AstroBox.debug.sendRaw not available on native side');\n    }\n}\n","export function getDeviceList() {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.getDeviceList) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(globalThis.AstroBox.device.getDeviceList());\n    }\n    else {\n        throw new Error('AstroBox.device.getDeviceList not available on native side');\n    }\n}\nexport function getDeviceState(addr) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.getDeviceState) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(globalThis.AstroBox.device.getDeviceState(addr));\n    }\n    throw new Error(\"AstroBox.device.getDeviceState not available on native side\");\n}\nexport function modifyDeviceState(addr, state) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.modifyDeviceState) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.device.modifyDeviceState(addr, JSON.stringify(state));\n    }\n    else {\n        throw new Error(\"AstroBox.device.modifyDeviceState not available on native side\");\n    }\n}\nexport async function disconnectDevice() {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.disconnectDevice) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.device.disconnectDevice();\n    }\n    else {\n        throw new Error(\"AstroBox.device.disconnectDevice not available on native side\");\n    }\n}\n","export function addEventListener(eventName, callback) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.event) === null || _b === void 0 ? void 0 : _b.addEventListener) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.event.addEventListener(eventName, callback);\n    }\n    else {\n        throw new Error(\"AstroBox.event.addEventListener not available\");\n    }\n}\nexport function removeEventListener(eventName) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.event) === null || _b === void 0 ? void 0 : _b.removeEventListener) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.event.removeEventListener(eventName);\n    }\n    else {\n        throw new Error(\"AstroBox.event.removeEventListener not available\");\n    }\n}\nexport function sendEvent(eventName, payload) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.event) === null || _b === void 0 ? void 0 : _b.sendEvent) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.event.sendEvent(eventName, payload);\n    }\n    else {\n        throw new Error(\"AstroBox.event.sendEvent not available\");\n    }\n}\n","import { base64ToUint8Array } from \"../utils.js\";\nexport async function pickFile(options) {\n    var _a, _b;\n    const options_ = {\n        decode_text: false,\n        encoding: \"undefined\",\n        ...options\n    };\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.filesystem) === null || _b === void 0 ? void 0 : _b.pickFile) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(await globalThis.AstroBox.filesystem.pickFile(JSON.stringify(options_)));\n    }\n    else {\n        throw new Error(\"AstroBox.filesystem.pickFile not available\");\n    }\n}\nexport async function readFile(path, options) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.filesystem) === null || _b === void 0 ? void 0 : _b.readFile) === \"function\") {\n        let options_ = {\n            offset: 0,\n            decode_text: true,\n            ...options\n        };\n        // @ts-ignore\n        var result = await globalThis.AstroBox.filesystem.readFile(path, JSON.stringify(options_));\n        if (options_.decode_text) {\n            return result;\n        }\n        return base64ToUint8Array(result);\n    }\n    else {\n        throw new Error(\"AstroBox.filesystem.readFile not available\");\n    }\n}\nexport async function unloadFile(path) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.filesystem) === null || _b === void 0 ? void 0 : _b.unloadFile) === \"function\") {\n        // @ts-ignore\n        return await globalThis.AstroBox.filesystem.unloadFile(path);\n    }\n    else {\n        throw new Error(\"AstroBox.filesystem.unloadFile not available\");\n    }\n}\n","// @ts-ignore\nfunction call(name, file) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.installer) === null || _b === void 0 ? void 0 : _b[name]) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.installer[name](file);\n    }\n    else {\n        // @ts-ignore\n        throw new Error(`AstroBox.installer.${name} not available`);\n    }\n}\nexport const addThirdPartyAppToQueue = (f) => call(\"addThirdPartyAppToQueue\", f);\nexport const addWatchFaceToQueue = (f) => call(\"addWatchFaceToQueue\", f);\nexport const addFirmwareToQueue = (f) => call(\"addFirmwareToQueue\", f);\n","__webpack_require__.rv = () => (\"1.4.6\")","__webpack_require__.ruid = \"bundler=rspack@1.4.6\";\n","export async function sendQAICMessage(pkgName, data) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.interconnect) === null || _b === void 0 ? void 0 : _b.sendQAICMessage) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.interconnect.sendQAICMessage(pkgName, data);\n    }\n    else {\n        throw new Error(\"AstroBox.interconnect.sendQAICMessage not available\");\n    }\n}\n","export function onLoad(cb) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.lifecycle) === null || _b === void 0 ? void 0 : _b.onLoad) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.lifecycle.onLoad(cb);\n    }\n    else {\n        throw new Error(\"AstroBox.lifecycle.onLoad not available\");\n    }\n}\n","export function regNativeFun(func) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.native) === null || _b === void 0 ? void 0 : _b.regNativeFun) === \"function\") {\n        // @ts-ignore\n        return globalThis.AstroBox.native.regNativeFun(func);\n    }\n    throw new Error(\"AstroBox.native.regNativeFun not available\");\n}\n","import { base64ToUint8Array, uint8ArrayToBase64 } from \"../utils.js\";\nexport async function fetch(url, options) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.network) === null || _b === void 0 ? void 0 : _b.fetch) === \"function\") {\n        // @ts-ignore\n        options.body_encoded = typeof options.body !== \"string\";\n        // @ts-ignore\n        options.body = options.body ? (options.body_encoded ? uint8ArrayToBase64(options.body) : options.body) : \"\";\n        // @ts-ignore\n        let ret = await globalThis.AstroBox.network.fetch(url, JSON.stringify({ raw: false, ...options }));\n        ret.body = options.raw ? base64ToUint8Array(ret.body) : ret.body;\n        return ret;\n    }\n    throw new Error(\"AstroBox.network.fetch not available\");\n}\n","export async function registerCommunityProvider(provider) {\n    var _a, _b;\n    // @ts-ignore\n    if (\n    // @ts-ignore\n    typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.provider) === null || _b === void 0 ? void 0 : _b.registerCommunityProvider) ===\n        \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.provider.registerCommunityProvider(JSON.stringify(provider));\n    }\n    else {\n        throw new Error(\"AstroBox.provider.registerCommunityProvider not available\");\n    }\n}\n","export async function launchQA(appInfo, pageName) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.thirdpartyapp) === null || _b === void 0 ? void 0 : _b.launchQA) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.thirdpartyapp.launchQA(JSON.stringify(appInfo), pageName);\n    }\n    else {\n        throw new Error(\"AstroBox.thirdpartyapp.launchQA not available\");\n    }\n}\nexport async function getThirdPartyAppList() {\n    var _a, _b;\n    // @ts-ignore\n    if (\n    // @ts-ignore\n    typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.thirdpartyapp) === null || _b === void 0 ? void 0 : _b.getThirdPartyAppList) ===\n        \"function\") {\n        // @ts-ignore\n        const raw = await globalThis.AstroBox.thirdpartyapp.getThirdPartyAppList();\n        return JSON.parse(raw);\n    }\n    throw new Error(\"AstroBox.thirdpartyapp.getThirdPartyAppList not available\");\n}\n","// @ts-ignore\nfunction call(name, arg) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.ui) === null || _b === void 0 ? void 0 : _b[name]) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.ui[name](arg);\n    }\n    else {\n        // @ts-ignore\n        throw new Error(`AstroBox.ui.${name} not available`);\n    }\n}\nexport const updatePluginSettingsUI = (ui) => call(\"updatePluginSettingsUI\", JSON.stringify(ui));\nexport const openPageWithNodes = (ui) => call(\"openPageWithNodes\", JSON.stringify(ui));\nexport const openPageWithUrl = (url) => call(\"openPageWithUrl\", url);\n","import { initApis } from \"./init.js\";\nconst AstroBox = {};\ninitApis(AstroBox);\nexport default AstroBox;\n","import * as configImpl from \"./impls/config.js\";\nimport * as debugImpl from \"./impls/debug.js\";\nimport * as deviceImpl from \"./impls/device.js\";\nimport * as eventImpl from \"./impls/event.js\";\nimport * as filesystemImpl from \"./impls/filesystem.js\";\nimport * as installerImpl from \"./impls/installer.js\";\nimport * as interconnectImpl from \"./impls/interconnect.js\";\nimport * as lifecycleImpl from \"./impls/lifecycle.js\";\nimport * as nativeImpl from \"./impls/native.js\";\nimport * as networkImpl from \"./impls/network.js\";\nimport * as providerImpl from \"./impls/provider.js\";\nimport * as thirdpartyImpl from \"./impls/thirdpartyapp.js\";\nimport * as uiImpl from \"./impls/ui.js\";\nexport function initApis(AstroBox) {\n    // Config APIs\n    AstroBox.config = {};\n    AstroBox.config.readConfig = configImpl.read;\n    AstroBox.config.writeConfig = configImpl.write;\n    // Debug APIs\n    AstroBox.debug = {};\n    AstroBox.debug.sendRaw = debugImpl.sendRaw;\n    // Device APIs\n    AstroBox.device = {};\n    AstroBox.device.getDeviceList = deviceImpl.getDeviceList;\n    AstroBox.device.getDeviceState = deviceImpl.getDeviceState;\n    AstroBox.device.modifyDeviceState = deviceImpl.modifyDeviceState;\n    AstroBox.device.disconnectDevice = deviceImpl.disconnectDevice;\n    // Event APIs\n    AstroBox.event = {};\n    AstroBox.event.addEventListener = eventImpl.addEventListener;\n    AstroBox.event.removeEventListener = eventImpl.removeEventListener;\n    AstroBox.event.sendEvent = eventImpl.sendEvent;\n    // Installer APIs\n    AstroBox.installer = {};\n    AstroBox.installer.addThirdPartyAppToQueue = installerImpl.addThirdPartyAppToQueue;\n    AstroBox.installer.addWatchFaceToQueue = installerImpl.addWatchFaceToQueue;\n    AstroBox.installer.addFirmwareToQueue = installerImpl.addFirmwareToQueue;\n    // Interconnect APIs\n    AstroBox.interconnect = {};\n    AstroBox.interconnect.sendQAICMessage = interconnectImpl.sendQAICMessage;\n    // Lifecycle APIs\n    AstroBox.lifecycle = {};\n    AstroBox.lifecycle.onLoad = lifecycleImpl.onLoad;\n    // Native APIs\n    AstroBox.native = {};\n    AstroBox.native.regNativeFun = nativeImpl.regNativeFun;\n    // Network APIs\n    AstroBox.network = {};\n    AstroBox.network.fetch = networkImpl.fetch;\n    // Provider APIs\n    AstroBox.provider = {};\n    AstroBox.provider.registerCommunityProvider = providerImpl.registerCommunityProvider;\n    // Third-Party App APIs\n    AstroBox.thirdpartyapp = {};\n    AstroBox.thirdpartyapp.launchQA = thirdpartyImpl.launchQA;\n    AstroBox.thirdpartyapp.getThirdPartyAppList = thirdpartyImpl.getThirdPartyAppList;\n    // UI APIs\n    AstroBox.ui = {};\n    AstroBox.ui.updatePluginSettingsUI = uiImpl.updatePluginSettingsUI;\n    AstroBox.ui.openPageWithNodes = uiImpl.openPageWithNodes;\n    AstroBox.ui.openPageWithUrl = uiImpl.openPageWithUrl;\n    // FileSystem APIs\n    AstroBox.filesystem = {};\n    AstroBox.filesystem.pickFile = filesystemImpl.pickFile;\n    AstroBox.filesystem.readFile = filesystemImpl.readFile;\n    AstroBox.filesystem.unloadFile = filesystemImpl.unloadFile;\n}\n","import AstroBox from \"astrobox-plugin-sdk\";\r\nexport default class interconnect {\r\n    listeners = new Map<string, ((data: any) => void)>();\r\n    packageName: string;\r\n    constructor(packageName: string) {\r\n        this.packageName = packageName;\r\n        AstroBox.event.addEventListener<string>(`onQAICMessage_${packageName}`, (data) => {\r\n            const { tag, ...payload } = JSON.parse(data);\r\n            this.listeners.get(tag)?.(payload);\r\n        })\r\n    }\r\n    /**\r\n     * @param {string} tag\r\n     * @param {Function} callback\r\n     */\r\n    addListener<T>(tag: string, callback: (data: T) => void) {\r\n        this.listeners.set(tag, callback);\r\n    }\r\n    /**\r\n     * @param {string} tag\r\n     */\r\n    removeListener(tag: string) {\r\n        this.listeners.delete(tag);\r\n    }\r\n    send<T>(tag: string, data: T) {\r\n        return AstroBox.interconnect.sendQAICMessage(this.packageName,JSON.stringify({tag,...data}))\r\n    }\r\n}","import AstroBox from 'astrobox-plugin-sdk';\r\nimport interconn from './interconn.ts';\r\n//握握手，握握双手\r\nconst type = \"__hs__\"\r\nconst TIMEOUT = 3000;\r\n\r\nexport default class InterHandshake extends interconn {\r\n    promise: Promise<void>|null = null;\r\n    resolve: ((value: void | PromiseLike<void>) => void) | null = null;\r\n    timeout: ReturnType<typeof setTimeout>|null = null;\r\n    constructor(packageName: string) {\r\n        super(packageName);\r\n        AstroBox.event.addEventListener<string>(`onQAICMessage_${packageName}`, (data) => {\r\n            if (this.timeout) clearTimeout(this.timeout);\r\n            this.timeout = setTimeout(() => this.promise = this.resolve = null, TIMEOUT);\r\n            const { tag, ...payload } = JSON.parse(data);\r\n            this.listeners.get(tag)?.(payload);\r\n        })\r\n        this.addListener<{count:number}>(type, ({ count }) => {\r\n            if (count > 0) {\r\n                if (this.promise) {\r\n                    this.resolve?.();\r\n                    this.resolve = null;\r\n                }\r\n                else {\r\n                    this.promise = Promise.resolve()\r\n                    this.callback()\r\n                }\r\n            }\r\n            if (count++ < 2) super.send(type, { count });\r\n        })\r\n    }\r\n    async send<T>(...args: Parameters<typeof interconn.prototype.send<T>>): ReturnType<typeof interconn.prototype.send<T>> {\r\n        if (this.promise) await this.promise;\r\n        else await (this.promise = this._newPromise())\r\n        return await super.send(...args)\r\n    }\r\n    setHandshakeListener(callback: () => void) {\r\n        this.callback= callback\r\n    }\r\n    callback = () => { }\r\n    get connected() { return this.promise !== null }\r\n    _newPromise() {\r\n        return new Promise<void>(( resolve, reject ) => {\r\n            const timeout = setTimeout(() => {\r\n                reject(new Error(\"timeout\"));\r\n                this.promise = this.resolve = null;\r\n            }, TIMEOUT)\r\n            this.resolve = () => {\r\n                resolve()\r\n                clearTimeout(timeout)\r\n            }\r\n            super.send(type, { count: 0 })\r\n        })\r\n    }\r\n}","export function formatBytes(bytes: number, decimals = 2) {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n}\r\nexport function getFileName(filePath: string): string {\r\n    if (!filePath) return '';\r\n    // 统一路径分隔符\r\n    const normalizedPath = filePath.replace(/\\\\/g, '/');\r\n    // 拿到最后一部分\r\n    const lastSegment = normalizedPath.split('/').pop() ?? '';\r\n    return lastSegment;\r\n}\r\n","import AstroBox from \"astrobox-plugin-sdk\";\r\nimport InterHandshake from \"./handshake\";\r\nimport { formatBytes } from \"./utils\";\r\n\r\n// --- Message Type Definitions ---\r\n\r\n// Data payloads for messages SENT TO the device.\r\n// Note: These do NOT contain 'tag'. The 'interconn' class adds it.\r\ninterface StartTransferData { stat: \"startTransfer\"; filename: string; total: number; chunkSize: number; }\r\ninterface DataChunkData { stat: \"d\"; setCount?: number | null; count: number; data: string; }\r\ninterface CancelData { stat: \"cancel\"; }\r\ninterface GetUsageData { stat: \"getUsage\"; }\r\n\r\n// Data payloads for messages RECEIVED FROM the device.\r\n// This is the structure the 'data' property of the incoming message should have.\r\ntype FileMessageFromDevice = ReadyMessage | ErrorMessage | SuccessMessage | NextMessage | CancelMessage;\r\ninterface ReadyMessage { type: \"ready\"; found: boolean; usage: number; length?: number; }\r\ninterface ErrorMessage { type: \"error\"; message: string; count: number; }\r\ninterface SuccessMessage { type: \"success\"; message: string; count: number; }\r\ninterface NextMessage { type: \"next\"; message: string; count: number; }\r\ninterface CancelMessage { type: \"cancel\"; }\r\n\r\n\r\n// --- File Class Implementation ---\r\n\r\nexport default class File {\r\n    private readonly conn: InterHandshake;\r\n    private readonly FILE_SIZE = 150; // 512b\r\n\r\n    private curFile: string = \"\";\r\n\r\n    private totalChunk: number = 0;\r\n    private lastChunkTime: number = 0;\r\n    private chunkSize: number = 0;\r\n    private busy: boolean = false;\r\n    private nextChunk: Promise<string> = Promise.resolve(\"\");\r\n\r\n    // Callbacks\r\n    private onError: (message: string, count: number) => void = () => { };\r\n    private onSuccess: (message: string, count: number) => void = () => { };\r\n    private onProgress: (progress: number, status: string) => void = () => { };\r\n\r\n    constructor(conn: InterHandshake) {\r\n        this.conn = conn;\r\n\r\n        // CRITICAL NOTE: The 'interconn' listener passes 'd.data'.\r\n        // The Kotlin peer sends a flat object, so 'message' here will be 'undefined',\r\n        // causing a crash. This listener is written assuming a compatible peer.\r\n        this.conn.addListener<FileMessageFromDevice>(\"file\", (message) => {\r\n            if (!this.busy || !message) {\r\n                if (!message && this.busy) {\r\n                    this.onError(\"Received incompatible (or empty) message from peer.\", 0);\r\n                }\r\n                return;\r\n            }\r\n\r\n            try {\r\n                switch (message.type) {\r\n                    case \"ready\":\r\n                        if (message.usage > 25 * 1024 * 1024) { // 25MB\r\n                            this.onError(\"存储空间不足\", 0);\r\n                            this.busy = false;\r\n                            return;\r\n                        }\r\n                        if (message.found && message.length && message.length > 0) {\r\n                            const currentChunk = Math.floor(message.length / this.FILE_SIZE);\r\n                            this.nextChunk = AstroBox.filesystem.readFile(this.curFile, {\r\n                                offset: (currentChunk > this.totalChunk ? 0 : currentChunk) * this.chunkSize,\r\n                                len: this.chunkSize,\r\n                                decode_text: true,\r\n                            }) as Promise<string>;\r\n                            this.sendNextChunk(currentChunk > this.totalChunk ? 0 : currentChunk, true);\r\n                        } else {\r\n                            this.sendNextChunk(0);\r\n                        }\r\n                        break;\r\n\r\n                    case \"error\":\r\n                        this.sendNextChunk(message.count);\r\n                        break;\r\n\r\n                    case \"success\":\r\n                        this.busy = false;\r\n                        this.onProgress(1.0, \"传输完成\");\r\n                        this.onSuccess(message.message, message.count);\r\n                        break;\r\n\r\n                    case \"next\":\r\n                        this.sendNextChunk(message.count);\r\n                        break;\r\n\r\n                    case \"cancel\":\r\n                        this.busy = false;\r\n                        this.onSuccess(\"传输已取消\", 0);\r\n                        break;\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Error processing file message:\", message, e);\r\n                this.onError(\"解析消息失败\", 0);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends file content to the device.\r\n     * @param filename The name of the file.\r\n     * @param path The path of the file.\r\n     * @param onProgress Progress callback (0-1, chunk preview, status string).\r\n     * @param onSuccess Success callback.\r\n     * @param onError Error callback.\r\n     */\r\n    public async sendFile(\r\n        filename: string,\r\n        path: string,\r\n        size: number,\r\n        text_len: number,\r\n        onProgress: (progress: number, status: string) => void,\r\n        onSuccess: (message: string, count: number) => void,\r\n        onError: (message: string, count: number) => void,\r\n    ) {\r\n        if (this.busy) {\r\n            onError(\"A file transfer is already in progress.\", 0);\r\n            return;\r\n        }\r\n\r\n        this.busy = true;\r\n        this.onProgress = onProgress;\r\n        this.onSuccess = onSuccess;\r\n        this.onError = onError;\r\n        this.lastChunkTime = 0;\r\n\r\n        this.totalChunk = Math.ceil(size / this.FILE_SIZE);\r\n        this.chunkSize = Math.floor(text_len / this.totalChunk);\r\n\r\n        if (this.totalChunk === 0) {\r\n            onSuccess(\"File is empty, nothing to send.\", 0);\r\n            this.busy = false;\r\n            return;\r\n        }\r\n\r\n        this.curFile = path;\r\n\r\n        onProgress(0.0 , \"Preparing to send...\");\r\n\r\n        const startMessage: StartTransferData = {\r\n            stat: \"startTransfer\",\r\n            filename: filename,\r\n            total: this.totalChunk,\r\n            chunkSize: this.FILE_SIZE,\r\n        };\r\n\r\n        try {\r\n            // Correctly call send() with tag and data object.\r\n            // CRITICAL NOTE: The Kotlin peer will not understand the resulting\r\n            // '{\"tag\":\"file\", \"data\":{...}}' structure.\r\n            this.nextChunk = AstroBox.filesystem.readFile(this.curFile, {\r\n                offset: 0,\r\n                len: this.chunkSize,\r\n                decode_text: true,\r\n            }) as Promise<string>;\r\n            await this.conn.send(\"file\", startMessage);\r\n        } catch (e: any) {\r\n            this.onError(`Failed to send start command: ${e.message}`, 0);\r\n            this.busy = false;\r\n        }\r\n    }\r\n\r\n    private async sendNextChunk(currentChunk: number, isReSend: boolean = false) {\r\n        if (currentChunk > this.totalChunk) {\r\n            console.log(\"All chunks sent. Waiting for final 'success' confirmation from peer.\");\r\n            return;\r\n        }\r\n\r\n        const chunk = await this.nextChunk;\r\n        const message: DataChunkData = {\r\n            stat: \"d\",\r\n            count: currentChunk,\r\n            data: chunk,\r\n            setCount: isReSend ? currentChunk : null,\r\n        };\r\n\r\n        const currentTime = Date.now();\r\n        if (this.lastChunkTime !== 0) {\r\n            const timeTakenMs = currentTime - this.lastChunkTime;\r\n            const speed = this.FILE_SIZE / (timeTakenMs / 1000.0);\r\n            const remainingTimeS = (this.totalChunk - currentChunk) * (timeTakenMs / 1000.0);\r\n            this.onProgress(\r\n                currentChunk / this.totalChunk,\r\n                ` ${formatBytes(speed)}/s, ${Math.round(remainingTimeS)}s`\r\n            );\r\n        } else {\r\n            this.onProgress(currentChunk / this.totalChunk, \" --\");\r\n        }\r\n        this.lastChunkTime = currentTime;\r\n\r\n        if(currentChunk < this.totalChunk)this.nextChunk = AstroBox.filesystem.readFile(this.curFile, {\r\n            offset: (currentChunk + 1) * this.chunkSize,\r\n            len: this.chunkSize,\r\n            decode_text: true,\r\n        }) as Promise<string>;\r\n\r\n        this.conn.send(\"file\", message).catch(e => {\r\n            this.onError(`Failed to send chunk #${currentChunk}: ${e.message}`, currentChunk);\r\n            this.busy = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Cancels the current transfer.\r\n     */\r\n    public cancel() {\r\n        if (!this.busy) return;\r\n\r\n        this.busy = false;\r\n        const message: CancelData = { stat: \"cancel\" };\r\n\r\n        this.conn.send(\"file\", message).catch(e => {\r\n            console.error(\"Failed to send cancel message\", e);\r\n        });\r\n        //this.onSuccess(\"Transfer cancelled by user.\", 0);\r\n    }\r\n}","import AstroBox from \"astrobox-plugin-sdk\";\r\nimport InterHandshake from \"./handshake\";\r\n\r\nexport default class FetchClient{\r\n    private conn: InterHandshake\r\n    private static name = \"fetch\"\r\n    constructor(interconn:InterHandshake) {\r\n        this.conn = interconn;\r\n        this.conn.addListener<FetchData>(FetchClient.name, async (data) => {\r\n            try {\r\n                if (!data.options) data.options = {}\r\n                const normalizedOptions = {\r\n                    raw: false,\r\n                    ...data.options,\r\n                    headers: normalizeHeaders(data.options.headers),\r\n                }\r\n                const resp = await AstroBox.network.fetch(data.url, normalizedOptions);\r\n                this.conn.send(FetchClient.name, { resp, id: data.id });\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\ninterface FetchData {\r\n    url: string\r\n    options: {\r\n        method?: string,\r\n        headers?: HeadersInit,\r\n        body?: string\r\n    }\r\n    id:string\r\n}\r\nfunction normalizeHeaders(headers?: HeadersInit): Record<string, string> {\r\n    if (!headers) return {};\r\n    if (Array.isArray(headers)) {\r\n        return Object.fromEntries(headers);\r\n    } else if (headers instanceof Headers) {\r\n        const result: Record<string, string> = {};\r\n        headers.forEach((value, key) => {\r\n            result[key] = value;\r\n        });\r\n        return result;\r\n    } else {\r\n        return headers as Record<string, string>;\r\n    }\r\n}"],"names":["fileSender","file","read","_a","_b","globalThis","JSON","Error","write","content","uint8ArrayToBase64","bytes","base64abc","result","i","l","base64ToUint8Array","base64","table","padding","byteLength","arr","Uint8Array","byteIdx","n","sendRaw","data","getDeviceList","getDeviceState","addr","modifyDeviceState","state","disconnectDevice","addEventListener","eventName","callback","removeEventListener","sendEvent","payload","pickFile","options","options_","readFile","path","unloadFile","call","name","addThirdPartyAppToQueue","f","addWatchFaceToQueue","addFirmwareToQueue","sendQAICMessage","pkgName","onLoad","cb","regNativeFun","func","fetch","url","ret","registerCommunityProvider","provider","launchQA","appInfo","pageName","getThirdPartyAppList","arg","updatePluginSettingsUI","ui","openPageWithNodes","openPageWithUrl","AstroBox","initApis","configImpl","debugImpl","deviceImpl","eventImpl","installerImpl","interconnectImpl","lifecycleImpl","nativeImpl","networkImpl","providerImpl","thirdpartyImpl","uiImpl","filesystemImpl","interconnect","tag","packageName","Map","_this_listeners_get","_JSON_parse","type","InterHandshake","interconn","_key","args","Promise","resolve","reject","timeout","setTimeout","clearTimeout","count","_this","formatBytes","decimals","Math","parseFloat","sizes","getFileName","filePath","_normalizedPath_split_pop","File","filename","size","text_len","onProgress","onSuccess","onError","startMessage","e","currentChunk","isReSend","console","chunk","currentTime","Date","timeTakenMs","speed","remainingTimeS","conn","message","FetchClient","normalizedOptions","normalizeHeaders","headers","Array","Object","Headers","value","key","resp","error","onPick","sendFile","handleSend","cancelSend","handleCancelSend","app","appList","onprogress","onsuccess","onerror","progress","status","InterFile"],"mappings":"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"}